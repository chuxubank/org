name: Org Agenda Batch

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ORG_DIR: ${{ github.workspace }}/org
      TZ: Asia/Shanghai

    steps:
      - name: Setup Nix
        uses: nixbuild/nix-quick-install-action@v30
        with:
        nix_conf: |
          keep-env-derivations = true
          keep-outputs = true

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: "org"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          fingerprint: "4A3496EF07412374837EE08E7809CD8BE0FB2C96"

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Setup emacs
        uses: purcell/setup-emacs@master
        with:
          version: 30.1

      - name: Check timezone
        run: emacs -batch -eval '(message "%s" (current-time-zone))'

      - name: Make publish dir
        run: mkdir -p publish

      - name: Move assets
        run: mv $ORG_DIR/assets/ publish/

      - name: Run emacs commands
        run: emacs -batch -l $ORG_DIR/batch/agenda.el -eval '(org-batch-store-agenda-views)'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./publish

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
